{"version":3,"sources":["firebase.js","components/AddGoal.jsx","components/GoalItem.jsx","components/GoalList.jsx","actions/index.js","constants.js","components/CompleteGoalList.jsx","components/App.jsx","components/SignIn.jsx","components/SignUp.jsx","reducers/ReducerUser.js","reducers/index.js","reducers/ReducerGoals.js","reducers/CompleteGoalsReducer.js","index.js"],"names":["firebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","cardRef","ref","filteredCardRef","AddGoal","props","state","title","this","email","user","push","className","type","placeholder","style","marginRight","onChange","event","setState","target","value","onClick","addGoal","Component","connect","GoalItem","goal","serverKey","child","remove","margin","completeGoal","GoalList","on","snap","goals","forEach","val","key","setGoals","map","index","CompleteGoalList","completeGoals","setCompleted","set","clearCompleted","App","auth","signOut","SignIn","password","error","signInWithEmailAndPassword","catch","signIn","message","to","SignUp","console","log","createUserAndRetrieveDataWithEmailAndPassword","signUp","combineReducers","action","store","createStore","reducer","onAuthStateChanged","dispatch","logUser","browserHistory","replace","ReactDOM","render","path","history","component","document","getElementById"],"mappings":"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","file":"static/js/main.161ad12f.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\n\nconst config = {\n  apiKey: \"AIzaSyAQwdP2G_4IAWSULXur_oLg7jvQy502eSE\",\n  authDomain: \"travel-hacker-b5fc2.firebaseapp.com\",\n  databaseURL: \"https://travel-hacker-b5fc2.firebaseio.com\",\n  projectId: \"travel-hacker-b5fc2\",\n  storageBucket: \"travel-hacker-b5fc2.appspot.com\",\n  messagingSenderId: \"812038824612\"\n};\n\nexport const firebaseApp = firebase.initializeApp(config);\nexport const cardRef = firebase.database().ref(\"cards\");\nexport const filteredCardRef = firebase.database().ref(\"filteredCards\");\n","import React, { Component } from \"react\";\nimport { cardRef } from \"../firebase\";\nimport { connect } from \"react-redux\";\n\nclass AddGoal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\"\n    };\n  }\n\n  addGoal() {\n    const { title } = this.state;\n    const { email } = this.props.user;\n    cardRef.push({ email, title });\n  }\n\n  render() {\n    return (\n      <div className=\"form-inline\">\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Add a goal\"\n            className=\"form-control\"\n            style={{ marginRight: \"5px\" }}\n            onChange={event => this.setState({ title: event.target.value })}\n          />\n          <button\n            className=\"btn btn-success\"\n            type=\"button\"\n            onClick={() => this.addGoal()}\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state;\n  return { user };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddGoal);\n","import React, { Component } from \"react\";\nimport { filteredCardRef, cardRef } from \"../firebase\";\nimport { connect } from \"react-redux\";\n\nclass GoalItem extends Component {\n  completeGoal() {\n    const { email } = this.props.user;\n    const { title, serverKey } = this.props.goal;\n    cardRef.child(serverKey).remove();\n    filteredCardRef.push({ email, title });\n  }\n\n  render() {\n    const { email, title } = this.props.goal;\n    return (\n      <div style={{ margin: \"5px\" }}>\n        <strong>{title}</strong>\n        <span style={{ margin: \"5px\" }}>\n          {\" \"}\n          submitted by <em>{email}</em>\n        </span>\n        <button\n          className=\"btn btn-sm btn-primary\"\n          onClick={() => this.completeGoal()}\n        >\n          Complete\n        </button>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state;\n  return { user };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(GoalItem);\n","import React, { Component } from \"react\";\nimport { cardRef } from \"../firebase\";\nimport { connect } from \"react-redux\";\nimport { setGoals } from \"../actions\";\nimport GoalItem from \"./GoalItem\";\n\nclass GoalList extends Component {\n  componentDidMount() {\n    cardRef.on(\"value\", snap => {\n      let goals = [];\n      snap.forEach(goal => {\n        const { email, title } = goal.val();\n        const serverKey = goal.key;\n        goals.push({ email, title, serverKey });\n      });\n      this.props.setGoals(goals);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.goals.map((goal, index) => {\n          return (\n            <GoalItem key={index} goal={goal}>\n              {goal.title}\n            </GoalItem>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { goals } = state;\n  return { goals };\n}\n\nexport default connect(\n  mapStateToProps,\n  { setGoals }\n)(GoalList);\n","import { SIGNED_IN, SET_GOALS, SET_COMPLETED } from '../constants';\n\nexport function logUser(email) {\n    const action = {\n        type: SIGNED_IN,\n        email\n    }\n    return action;\n}\n\nexport function setGoals(goals) {\n    const action = {\n        type: SET_GOALS,\n        goals\n    }\n    return action;\n}\n\nexport function setCompleted(completeGoals) {\n    const action = {\n        type: SET_COMPLETED,\n        completeGoals\n    }\n    return action;\n}","export const SIGNED_IN = 'SIGNED_IN';\nexport const SET_GOALS = 'SET_GOALS';\nexport const SET_COMPLETED = 'SET_COMPLETED';","import React, { Component } from \"react\";\nimport { filteredCardRef } from \"../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCompleted } from \"../actions\";\n\nclass CompleteGoalList extends Component {\n  componentDidMount() {\n    filteredCardRef.on(\"value\", snap => {\n      let completeGoals = [];\n      snap.forEach(completeGoal => {\n        const { email, title } = completeGoal.val();\n        completeGoals.push({ email, title });\n      });\n      this.props.setCompleted(completeGoals);\n    });\n  }\n\n  clearCompleted() {\n    filteredCardRef.set([]);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.completeGoals.map((completeGoal, index) => {\n          const { title, email } = completeGoal;\n          return (\n            <div key={index}>\n              <strong>{title}</strong> completed by <em>{email}</em>\n            </div>\n          );\n        })}\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => this.clearCompleted()}\n        >\n          Clear All\n        </button>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { completeGoals } = state;\n  return { completeGoals };\n}\n\nexport default connect(\n  mapStateToProps,\n  { setCompleted }\n)(CompleteGoalList);\n","import React, { Component } from \"react\";\nimport { firebaseApp } from '../firebase';\nimport { connect } from 'react-redux';\nimport AddGoal from './AddGoal';\nimport GoalList from './GoalList';\nimport CompleteGoalList from './CompleteGoalList';\n\nclass App extends Component {\n\n  signOut() {\n    firebaseApp.auth().signOut();\n  }\n\n  render() {\n    return (\n    <div style={{margin: '5px'}}>\n      <h3>Goal Coach</h3>\n      <AddGoal />\n      <hr />\n      <h4>Goals</h4>\n      <GoalList />\n      <hr />    \n      <h4>Complete Goals</h4>\n      <CompleteGoalList />\n      <hr />\n      <button className=\"btn btn-danger\"\n              onClick={() => this.signOut()}>\n      Sign Out  \n      </button>\n    </div>);\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default connect(mapStateToProps, null)(App);\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router';\nimport { firebaseApp } from '../firebase';\n\nclass SignIn extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            error: ''\n        }\n    }\n\n    signIn() {\n        const { email, password } = this.state;\n        firebaseApp.auth().signInWithEmailAndPassword(email, password)\n            .catch(error => {\n                this.setState({error});\n            });\n    }\n\n    render() {\n        return (\n        <div className=\"form-inline\" style={{margin: '5%'}}>\n            <h2>Sign In</h2>\n            <div className=\"form-group\">\n                <input \n                    className=\"form-control\" \n                    type=\"text\" \n                    style={{margin: '5px'}}\n                    placeholder=\"email\" \n                    onChange={event => this.setState({email: event.target.value})}\n                />\n                <input\n                    className=\"form-control\"\n                    type=\"password\"\n                    style={{margin: '5px'}}\n                    placeholder=\"password\"\n                    onChange={event => this.setState({password: event.target.value})}\n                />\n                <button \n                    className=\"btn btn-primary\" \n                    type=\"button\"\n                    onClick={() => this.signIn()}>Sign In  \n                </button>\n            </div>\n            <div>{this.state.error.message}</div>\n            <div>\n                <Link to={'/signup'}>Sign Up</Link>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default SignIn;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router';\nimport { firebaseApp } from '../firebase';\n\nclass SignUp extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            error: ''\n        }\n    }\n\n    signUp() {\n        console.log(this.state);\n        const { email, password } = this.state;\n        firebaseApp.auth().createUserAndRetrieveDataWithEmailAndPassword(email, password)\n            .catch(error => {\n                this.setState({error});\n            });\n    }\n\n    render() {\n        return (\n        <div className=\"form-inline\" style={{margin: '5%'}}>\n            <h2>Sign Up</h2>\n            <div className=\"form-group\">\n                <input \n                    className=\"form-control\" \n                    type=\"text\" \n                    style={{margin: '5px'}}\n                    placeholder=\"email\" \n                    onChange={event => this.setState({email: event.target.value})}\n                />\n                <input\n                    className=\"form-control\"\n                    type=\"password\"\n                    style={{margin: '5px'}}\n                    placeholder=\"password\"\n                    onChange={event => this.setState({password: event.target.value})}\n                />\n                <button \n                    className=\"btn btn-primary\" \n                    type=\"button\"\n                    onClick={() => this.signUp()}>Sign Up  \n                </button>\n            </div>\n            <div>{this.state.error.message}</div>\n            <div>\n                <Link to={'/signin'}>Already a user? Sign in instead.</Link>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default SignUp;\n","import { SIGNED_IN } from '../constants';\n\nlet user = {\n    email: null\n}\n\nexport default (state = user, action) => {\n    switch(action.type) {\n        case SIGNED_IN:\n            const { email } = action;\n            user = {\n                email\n            }\n            return user;\n        default:\n            return state;    \n    }\n}","import { combineReducers } from 'redux';\nimport user from './ReducerUser';\nimport goals from './ReducerGoals';\nimport completeGoals from './CompleteGoalsReducer';\n\nexport default combineReducers({\n    user,\n    goals,\n    completeGoals\n})","import { SET_GOALS } from '../constants';\n\nexport default (state = [], action) => {\n    switch(action.type) {\n        case SET_GOALS:\n            const { goals } = action;\n            return goals;\n        default:\n            return state;    \n    }\n}","import { SET_COMPLETED } from '../constants';\n\nexport default (state = [], action) => {\n    switch(action.type) {\n        case SET_COMPLETED:\n            const { completeGoals } = action;\n            return completeGoals; \n        default:\n            return state;    \n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router, Route, browserHistory } from \"react-router\";\nimport { firebaseApp } from \"./firebase\";\nimport App from \"./components/App\";\nimport SignIn from \"./components/SignIn\";\nimport SignUp from \"./components/SignUp\";\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers';\nimport { logUser } from './actions';\n\nconst store = createStore(reducer);\n\nfirebaseApp.auth().onAuthStateChanged(user => {\n  if (user) {\n    const { email } = user;\n    store.dispatch(logUser(email));\n    browserHistory.push('/app');\n  } else {\n    browserHistory.replace('/signin');\n  }\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router path=\"/\" history={browserHistory}>\n      <Route path=\"/app\" component={App} />\n      <Route path=\"/signin\" component={SignIn} />\n      <Route path=\"/signup\" component={SignUp} />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}