{"version":3,"sources":["firebase.js","components/AddCard.jsx","components/CardItem.jsx","components/CardList.jsx","actions/index.js","constants.js","components/FilteredCardList.jsx","components/App.jsx","components/SignIn.jsx","components/SignUp.jsx","reducers/ReducerUser.js","reducers/index.js","reducers/ReducerCards.js","reducers/FilteredCardsReducer.js","index.js"],"names":["firebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","cardRef","ref","filteredCardRef","AddCard","props","state","title","this","email","user","push","className","type","placeholder","style","marginRight","onChange","event","setState","target","value","onClick","addCard","Component","connect","CardItem","card","serverKey","child","remove","margin","completeCard","CardList","on","snap","cards","forEach","val","key","setCards","map","index","FilteredCardList","filteredCards","setFiltered","set","clearCompleted","App","auth","signOut","SignIn","password","error","signInWithEmailAndPassword","catch","signIn","message","to","SignUp","console","log","createUserAndRetrieveDataWithEmailAndPassword","signUp","combineReducers","action","store","createStore","reducer","onAuthStateChanged","dispatch","logUser","browserHistory","replace","ReactDOM","render","path","history","component","document","getElementById"],"mappings":"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","file":"static/js/main.bbe29089.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\n\nconst config = {\n  apiKey: \"AIzaSyAQwdP2G_4IAWSULXur_oLg7jvQy502eSE\",\n  authDomain: \"travel-hacker-b5fc2.firebaseapp.com\",\n  databaseURL: \"https://travel-hacker-b5fc2.firebaseio.com\",\n  projectId: \"travel-hacker-b5fc2\",\n  storageBucket: \"travel-hacker-b5fc2.appspot.com\",\n  messagingSenderId: \"812038824612\"\n};\n\nexport const firebaseApp = firebase.initializeApp(config);\nexport const cardRef = firebase.database().ref(\"cards\");\nexport const filteredCardRef = firebase.database().ref(\"filteredCards\");\n","import React, { Component } from \"react\";\nimport { cardRef } from \"../firebase\";\nimport { connect } from \"react-redux\";\n\nclass AddCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\"\n    };\n  }\n\n  addCard() {\n    const { title } = this.state;\n    const { email } = this.props.user;\n    cardRef.push({ email, title });\n  }\n\n  render() {\n    return (\n      <div className=\"form-inline\">\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Add a Card\"\n            className=\"form-control\"\n            style={{ marginRight: \"5px\" }}\n            onChange={event => this.setState({ title: event.target.value })}\n          />\n          <button\n            className=\"btn btn-success\"\n            type=\"button\"\n            onClick={() => this.addCard()}\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state;\n  return { user };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddCard);\n","import React, { Component } from \"react\";\nimport { filteredCardRef, cardRef } from \"../firebase\";\nimport { connect } from \"react-redux\";\n\nclass CardItem extends Component {\n  completeCard() {\n    const { email } = this.props.user;\n    const { title, serverKey } = this.props.card;\n    cardRef.child(serverKey).remove();\n    filteredCardRef.push({ email, title });\n  }\n\n  render() {\n    const { email, title } = this.props.card;\n    return (\n      <div style={{ margin: \"5px\" }}>\n        <strong>{title}</strong>\n        <span style={{ margin: \"5px\" }}>\n          {\" \"}\n          submitted by <em>{email}</em>\n        </span>\n        <button\n          className=\"btn btn-sm btn-primary\"\n          onClick={() => this.completeCard()}\n        >\n          Complete\n        </button>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state;\n  return { user };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CardItem);\n","import React, { Component } from \"react\";\nimport { cardRef } from \"../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCards } from \"../actions\";\nimport CardItem from \"./CardItem\";\n\nclass CardList extends Component {\n  componentDidMount() {\n    cardRef.on(\"value\", snap => {\n      let cards = [];\n      snap.forEach(card => {\n        const { email, title } = card.val();\n        const serverKey = card.key;\n        cards.push({ email, title, serverKey });\n      });\n      this.props.setCards(cards);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.cards.map((card, index) => {\n          return (\n            <CardItem key={index} card={card}>\n              {card.title}\n            </CardItem>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { cards } = state;\n  return { cards };\n}\n\nexport default connect(\n  mapStateToProps,\n  { setCards }\n)(CardList);\n","import { SIGNED_IN, SET_CARDS, SET_FILTERED } from \"../constants\";\n\nexport function logUser(email) {\n  const action = {\n    type: SIGNED_IN,\n    email\n  };\n  return action;\n}\n\nexport function setCards(cards) {\n  const action = {\n    type: SET_CARDS,\n    cards\n  };\n  return action;\n}\n\nexport function setFiltered(filteredCards) {\n  const action = {\n    type: SET_FILTERED,\n    filteredCards\n  };\n  return action;\n}\n","export const SIGNED_IN = \"SIGNED_IN\";\nexport const SET_CARDS = \"SET_CARDS\";\nexport const SET_FILTERED = \"SET_FILTERED\";\n","import React, { Component } from \"react\";\nimport { filteredCardRef } from \"../firebase\";\nimport { connect } from \"react-redux\";\nimport { setFiltered } from \"../actions\";\n\nclass FilteredCardList extends Component {\n  componentDidMount() {\n    filteredCardRef.on(\"value\", snap => {\n      let filteredCards = [];\n      snap.forEach(completeCard => {\n        const { email, title } = completeCard.val();\n        filteredCards.push({ email, title });\n      });\n      this.props.setFiltered(filteredCards);\n    });\n  }\n\n  clearCompleted() {\n    filteredCardRef.set([]);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.filteredCards.map((completeCard, index) => {\n          const { title, email } = completeCard;\n          return (\n            <div key={index}>\n              <strong>{title}</strong> completed by <em>{email}</em>\n            </div>\n          );\n        })}\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => this.clearCompleted()}\n        >\n          Clear All\n        </button>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { filteredCards } = state;\n  return { filteredCards };\n}\n\nexport default connect(\n  mapStateToProps,\n  { setFiltered }\n)(FilteredCardList);\n","import React, { Component } from \"react\";\nimport { firebaseApp } from \"../firebase\";\nimport { connect } from \"react-redux\";\nimport AddCard from \"./AddCard\";\nimport CardList from \"./CardList\";\nimport FilteredCardList from \"./FilteredCardList\";\n\nclass App extends Component {\n  signOut() {\n    firebaseApp.auth().signOut();\n  }\n\n  render() {\n    return (\n      <div style={{ margin: \"5px\" }}>\n        <h3>Travel Hacker</h3>\n        <AddCard />\n        <hr />\n        <h4>Cards</h4>\n        <CardList />\n        <hr />\n        <h4>Filtered Cards</h4>\n        <FilteredCardList />\n        <hr />\n        <button className=\"btn btn-danger\" onClick={() => this.signOut()}>\n          Sign Out\n        </button>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(App);\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router';\nimport { firebaseApp } from '../firebase';\n\nclass SignIn extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            error: ''\n        }\n    }\n\n    signIn() {\n        const { email, password } = this.state;\n        firebaseApp.auth().signInWithEmailAndPassword(email, password)\n            .catch(error => {\n                this.setState({error});\n            });\n    }\n\n    render() {\n        return (\n        <div className=\"form-inline\" style={{margin: '5%'}}>\n            <h2>Sign In</h2>\n            <div className=\"form-group\">\n                <input \n                    className=\"form-control\" \n                    type=\"text\" \n                    style={{margin: '5px'}}\n                    placeholder=\"email\" \n                    onChange={event => this.setState({email: event.target.value})}\n                />\n                <input\n                    className=\"form-control\"\n                    type=\"password\"\n                    style={{margin: '5px'}}\n                    placeholder=\"password\"\n                    onChange={event => this.setState({password: event.target.value})}\n                />\n                <button \n                    className=\"btn btn-primary\" \n                    type=\"button\"\n                    onClick={() => this.signIn()}>Sign In  \n                </button>\n            </div>\n            <div>{this.state.error.message}</div>\n            <div>\n                <Link to={'/signup'}>Sign Up</Link>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default SignIn;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router';\nimport { firebaseApp } from '../firebase';\n\nclass SignUp extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            error: ''\n        }\n    }\n\n    signUp() {\n        console.log(this.state);\n        const { email, password } = this.state;\n        firebaseApp.auth().createUserAndRetrieveDataWithEmailAndPassword(email, password)\n            .catch(error => {\n                this.setState({error});\n            });\n    }\n\n    render() {\n        return (\n        <div className=\"form-inline\" style={{margin: '5%'}}>\n            <h2>Sign Up</h2>\n            <div className=\"form-group\">\n                <input \n                    className=\"form-control\" \n                    type=\"text\" \n                    style={{margin: '5px'}}\n                    placeholder=\"email\" \n                    onChange={event => this.setState({email: event.target.value})}\n                />\n                <input\n                    className=\"form-control\"\n                    type=\"password\"\n                    style={{margin: '5px'}}\n                    placeholder=\"password\"\n                    onChange={event => this.setState({password: event.target.value})}\n                />\n                <button \n                    className=\"btn btn-primary\" \n                    type=\"button\"\n                    onClick={() => this.signUp()}>Sign Up  \n                </button>\n            </div>\n            <div>{this.state.error.message}</div>\n            <div>\n                <Link to={'/signin'}>Already a user? Sign in instead.</Link>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default SignUp;\n","import { SIGNED_IN } from '../constants';\n\nlet user = {\n    email: null\n}\n\nexport default (state = user, action) => {\n    switch(action.type) {\n        case SIGNED_IN:\n            const { email } = action;\n            user = {\n                email\n            }\n            return user;\n        default:\n            return state;    \n    }\n}","import { combineReducers } from \"redux\";\nimport user from \"./ReducerUser\";\nimport cards from \"./ReducerCards\";\nimport filteredCards from \"./FilteredCardsReducer\";\n\nexport default combineReducers({\n  user,\n  cards,\n  filteredCards\n});\n","import { SET_CARDS } from \"../constants\";\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case SET_CARDS:\n      const { cards } = action;\n      return cards;\n    default:\n      return state;\n  }\n};\n","import { SET_FILTERED } from \"../constants\";\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case SET_FILTERED:\n      const { filteredCards } = action;\n      return filteredCards;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router, Route, browserHistory } from \"react-router\";\nimport { firebaseApp } from \"./firebase\";\nimport App from \"./components/App\";\nimport SignIn from \"./components/SignIn\";\nimport SignUp from \"./components/SignUp\";\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers';\nimport { logUser } from './actions';\n\nconst store = createStore(reducer);\n\nfirebaseApp.auth().onAuthStateChanged(user => {\n  if (user) {\n    const { email } = user;\n    store.dispatch(logUser(email));\n    browserHistory.push('/app');\n  } else {\n    browserHistory.replace('/signin');\n  }\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router path=\"/\" history={browserHistory}>\n      <Route path=\"/app\" component={App} />\n      <Route path=\"/signin\" component={SignIn} />\n      <Route path=\"/signup\" component={SignUp} />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}